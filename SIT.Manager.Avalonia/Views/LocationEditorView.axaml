<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:ui="using:FluentAvalonia.UI.Controls"
			 xmlns:uip="using:FluentAvalonia.UI.Controls.Primitives"
             xmlns:vm="clr-namespace:SIT.Manager.Avalonia.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
			 Background="{DynamicResource ApplicationPageBackgroundThemeBrush}"
             x:Class="SIT.Manager.Avalonia.Views.LocationEditorView"
			 x:DataType="vm:LocationEditorViewModel">
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="3*"/>
		</Grid.RowDefinitions>

		<ui:CommandBar DefaultLabelPosition="Right" 
					   Grid.Row="0" 
					   Grid.ColumnSpan="3" 
					   HorizontalAlignment="Stretch" 
					   IsSticky="True"
					   IsDynamicOverflowEnabled="False">
			<StackPanel Orientation="Horizontal">
				<ui:CommandBarButton Name="LoadButton"
									 IconSource="Upload"
									 Label="Load"
									 Command="{Binding LoadCommand}"/>
				<ui:CommandBarButton Name="SaveButton"
									 IconSource="Download"
									 Label="Save"
									 Command="{Binding SaveCommand}"/>
			</StackPanel>
		</ui:CommandBar>

		<StackPanel Grid.Row="1"
					Margin="5">
			<TextBlock Text="Location"
					   FontFamily="{StaticResource BenderFont}"
					   Margin="0,5"/>
			<TextBox Name="LocationTextBox"
					 Watermark="Click 'Load'"
					 UseFloatingWatermark="False"
					 Width="200"
					 Text="{Binding LoadedLocation}"
					 HorizontalAlignment="Left"/>
		</StackPanel>

		<ScrollViewer Grid.Row="2">
			<StackPanel Orientation="Horizontal">
				<Expander Header="General Settings"
						  VerticalAlignment="Top">
					<StackPanel Margin="5" 
								HorizontalAlignment="Left"
								DataContext="{Binding Location}">
						<StackPanel.Styles>
							<Style Selector="ui|NumberBox">
								<Setter Property="Margin" Value="0,5"/>
								<Setter Property="Width" Value="160"/>
								<Setter Property="Maximum" Value="100"/>
								<Setter Property="Minimum" Value="0"/>
								<Setter Property="SpinButtonPlacementMode" Value="Compact"/>
								<Setter Property="ValidationMode" Value="InvalidInputOverwritten"/>
							</Style>
						</StackPanel.Styles>
						
						<ui:NumberBox Header="BotMax" 
									  HeaderTemplate="{StaticResource BoxHeaderTemplate}"
									  Value="{Binding BotMax, Mode=TwoWay}" 
									  ToolTip.Tip="Total max bots on the map allowed"/>
						<ui:NumberBox Header="BotMaxPlayer"
									  Value="{Binding BotMaxPlayer, Mode=TwoWay}"
									  HeaderTemplate="{StaticResource BoxHeaderTemplate}"
									  ToolTip.Tip="Total max bots that is PMC"/>
						<ui:NumberBox Header="BotNormal" 
									  HeaderTemplate="{StaticResource BoxHeaderTemplate}"
									  Value="{Binding BotNormal, Mode=TwoWay}"/>
						<ui:NumberBox Header="BotSpawnTimeOffMax"
									  HeaderTemplate="{StaticResource BoxHeaderTemplate}"
									  Value="{Binding BotSpawnTimeOffMax, Mode=TwoWay}"
									  ToolTip.Tip="Maximum spawn time in seconds when running offline"/>
						<ui:NumberBox Header="BotSpawnTimeOffMin"
									  HeaderTemplate="{StaticResource BoxHeaderTemplate}"
									  Value="{Binding BotSpawnTimeOffMin, Mode=TwoWay}"
									  ToolTip.Tip="Minimum spawntime in seconds when running offline"/>
						<ui:NumberBox Header="BotSpawnTimeOnMax" 
									  HeaderTemplate="{StaticResource BoxHeaderTemplate}"
									  Value="{Binding BotSpawnTimeOnMax, Mode=TwoWay}"
									  ToolTip.Tip="Maximum spawn time in seconds when running online"/>
						<ui:NumberBox Header="BotSpawnTimeOnMin" 
									  HeaderTemplate="{StaticResource BoxHeaderTemplate}"
									  Value="{Binding BotSpawnTimeOnMin, Mode=TwoWay}"
									  ToolTip.Tip="Minimum spawntime in seconds when running online"/>
						<ui:NumberBox Header="BotStart" 
									  HeaderTemplate="{StaticResource BoxHeaderTemplate}"
									  Value="{Binding BotStart, Mode=TwoWay}"/>
						<ui:NumberBox Header="BotStop" 
									  HeaderTemplate="{StaticResource BoxHeaderTemplate}"
									  Value="{Binding BotStop, Mode=TwoWay}"/>
						<ui:NumberBox Header="BotSpawnCountStep" 
									  HeaderTemplate="{StaticResource BoxHeaderTemplate}"
									  Value="{Binding BotSpawnCountStep, Mode=TwoWay}"/>
						<ui:NumberBox Header="BotSpawnPeriodCheck"
									  HeaderTemplate="{StaticResource BoxHeaderTemplate}"
									  Value="{Binding BotSpawnPeriodCheck, Mode=TwoWay}"/>
					</StackPanel>
				</Expander>

				<Expander Header="Waves Settings"
						  VerticalAlignment="Top">
					<StackPanel>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
							<Button Name="AddWaveButton" Margin="10,0,10,5" Content="Add Wave" VerticalAlignment="Bottom" Command="{Binding AddWaveCommand}" IsEnabled="False"/>
							<Button Name="RemoveWaveButton" Margin="10,0,10,5" Content="Remove Wave" VerticalAlignment="Bottom" Command="{Binding RemoveWaveCommand}" IsEnabled="False"/>
						</StackPanel>

						<StackPanel Orientation="Horizontal">
							<TextBlock Text="Spawn Waves"
									   FontFamily="{StaticResource BenderFont}"
									   Margin="5"/>
							<ListBox Name="WaveList" 
									 Margin="5,0,5,5" 
									 Width="150" 
									 ItemsSource="{Binding Location.waves, Mode=TwoWay}"
									 SelectedItem="{Binding SelectedWave}"
									 VerticalAlignment="Top">
								<ListBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Name}"/>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>

							<StackPanel DataContext="{Binding SelectedWave, Mode=TwoWay}">
								<TextBlock Text="BotPreset"
										   FontFamily="{StaticResource BenderFont}"
										   Margin="5"/>
								<ComboBox Margin="0,0,0,5" 
										  Name="BotPresetCombo" 
										  Width="160" 										  
										  SelectedValueBinding="{Binding BotPreset, Mode=TwoWay}"
										  ToolTip.Tip="Bot Difficulty">
									<ComboBoxItem Content="easy"/>
									<ComboBoxItem Content="normal"/>
									<ComboBoxItem Content="hard"/>
								</ComboBox>

								<!-- TODO 
							<ComboBox Margin="0,5" Header="BotSide" HeaderTemplate="{StaticResource BoxHeaderTemplate}" Width="160" DataContext="{Binding SelectedItem, ElementName=WaveList}" SelectedValue="{Binding Path=BotSide, Mode=TwoWay}" SelectedValuePath="Content" ToolTipService.ToolTip="The side of the Bot">
								<ComboBoxItem Content="Savage"/>
								<ComboBoxItem Content="Bear"/>
								<ComboBoxItem Content="Usec"/>
							</ComboBox>

							<ComboBox Margin="0,5" Header="SpawnPoints" HeaderTemplate="{StaticResource BoxHeaderTemplate}" Width="160" DataContext="{Binding SelectedItem, ElementName=WaveList}" SelectedValue="{Binding Path=SpawnPoints, Mode=TwoWay}" SelectedValuePath="Content" IsEnabled="False">
								<ComboBoxItem Content="BotZone"/>
							</ComboBox>

							<ComboBox Margin="0,5" Header="WildSpawnType" HeaderTemplate="{StaticResource BoxHeaderTemplate}" Width="160" DataContext="{Binding SelectedItem, ElementName=WaveList}" SelectedValue="{Binding Path=WildSpawnType, Mode=TwoWay}" SelectedValuePath="Content">
								<ComboBoxItem Content="assault"/>
								<ComboBoxItem Content="marksman"/>
							</ComboBox>

							<CheckBox Margin="0,5" Content="isPlayers" DataContext="{Binding SelectedItem, ElementName=WaveList}" IsChecked="{Binding isPlayers, Mode=TwoWay}" ToolTipService.ToolTip="Needs to be checked for waves to work on >3.8"/>
							<NumberBox Margin="0,5" HorizontalAlignment="Left" Header="number" Width="160" Maximum="100" Minimum="0" ValidationMode="InvalidInputOverwritten" SpinButtonPlacementMode="Compact" HeaderTemplate="{StaticResource BoxHeaderTemplate}" DataContext="{Binding SelectedItem, ElementName=WaveList}" Value="{Binding number, Mode=TwoWay}" ToolTipService.ToolTip="The number of the wave (needs to be >0)"/>
							<NumberBox Margin="0,5" HorizontalAlignment="Left" Header="slots_max" Width="160" Maximum="100" Minimum="0" ValidationMode="InvalidInputOverwritten" SpinButtonPlacementMode="Compact" HeaderTemplate="{StaticResource BoxHeaderTemplate}" DataContext="{Binding SelectedItem, ElementName=WaveList}" Value="{Binding slots_max, Mode=TwoWay}" ToolTipService.ToolTip="Max slots to spawn"/>
							<NumberBox Margin="0,5" HorizontalAlignment="Left" Header="slots_min" Width="160" Maximum="100" Minimum="0" ValidationMode="InvalidInputOverwritten" SpinButtonPlacementMode="Compact" HeaderTemplate="{StaticResource BoxHeaderTemplate}" DataContext="{Binding SelectedItem, ElementName=WaveList}" Value="{Binding slots_min, Mode=TwoWay}" ToolTipService.ToolTip="Min slots to spawn"/>
							<NumberBox Margin="0,5" HorizontalAlignment="Left" Header="time_max" Width="160" Maximum="100" Minimum="0" ValidationMode="InvalidInputOverwritten" SpinButtonPlacementMode="Compact" HeaderTemplate="{StaticResource BoxHeaderTemplate}" DataContext="{Binding SelectedItem, ElementName=WaveList}" Value="{Binding time_max, Mode=TwoWay}" ToolTipService.ToolTip="Max time to spawn bot wave"/>
							<NumberBox Margin="0,5" HorizontalAlignment="Left" Header="time_min" Width="160" Maximum="100" Minimum="0" ValidationMode="InvalidInputOverwritten" SpinButtonPlacementMode="Compact" HeaderTemplate="{StaticResource BoxHeaderTemplate}" DataContext="{Binding SelectedItem, ElementName=WaveList}" Value="{Binding time_min, Mode=TwoWay}" ToolTipService.ToolTip="Min time to spawn bot wave"/>
							-->
							</StackPanel>
						</StackPanel>
					</StackPanel>
				</Expander>

				<Expander Header="Boss Settings" VerticalAlignment="Top">
					<StackPanel>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
							<Button Name="AddBossButton" Margin="10,0,10,5" Content="Add Boss" VerticalAlignment="Bottom" Command="{Binding AddBossCommand}" IsEnabled="False"/>
							<Button Name="RemoveBossButton" Margin="10,0,10,5" Content="Remove Boss" VerticalAlignment="Bottom" Command="{Binding AddBossCommand}" IsEnabled="False"/>
						</StackPanel>

						<!-- TODO 
						<StackPanel Orientation="Horizontal">
							<ListView Name="BossList" Margin="5" Header="Boss List" HeaderTemplate="{StaticResource BoxHeaderTemplate}" Width="150" ItemsSource="{Binding BossLocationSpawn, Mode=TwoWay}" DisplayMemberPath="Name" VerticalAlignment="Top"/>

							<StackPanel>
								<NumberBox Margin="0,5" HorizontalAlignment="Left" Header="BossChance" Width="160" Maximum="100" Minimum="0" ValidationMode="InvalidInputOverwritten" SpinButtonPlacementMode="Compact" HeaderTemplate="{StaticResource BoxHeaderTemplate}" DataContext="{Binding SelectedItem, ElementName=BossList}" Value="{Binding BossChance, Mode=TwoWay}"/>

								<TextBox Margin="0,5" Header="BossEscortAmount" HeaderTemplate="{StaticResource BoxHeaderTemplate}" Width="160" DataContext="{Binding SelectedItem, ElementName=BossList}" Text="{Binding Path=BossEscortAmount, Mode=TwoWay}"/>

								<ComboBox Margin="0,5" Header="BossEscortType" HeaderTemplate="{StaticResource BoxHeaderTemplate}" Width="160" DataContext="{Binding SelectedItem, ElementName=BossList}" SelectedValue="{Binding Path=BossEscortType, Mode=TwoWay}" SelectedValuePath="Content">
									<ComboBoxItem Content="followerBully"/>
									<ComboBoxItem Content="followerTagilla"/>
									<ComboBoxItem Content="followerZryachiy"/>
									<ComboBoxItem Content="followerGluharAssault"/>
									<ComboBoxItem Content="followerSanitar"/>
									<ComboBoxItem Content="followerKojaniy"/>
									<ComboBoxItem Content="followerBoar"/>
									<ComboBoxItem Content="bossBoarSniper"/>
									<ComboBoxItem Content="crazyAssaultEvent"/>
									<ComboBoxItem Content="pmcBot"/>
									<ComboBoxItem Content="exUsec"/>
									<ComboBoxItem Content="sectantWarrior"/>
									<ComboBoxItem Content="arenaFighterEvent"/>
								</ComboBox>

								<ComboBox Margin="0,5" Header="BossName" HeaderTemplate="{StaticResource BoxHeaderTemplate}" Width="160" DataContext="{Binding SelectedItem, ElementName=BossList}" SelectedValue="{Binding Path=BossName, Mode=TwoWay}" SelectedValuePath="Content">
									<ComboBoxItem Content="bossKnight"/>
									<ComboBoxItem Content="bossBully"/>
									<ComboBoxItem Content="bossTagilla"/>
									<ComboBoxItem Content="bossKilla"/>
									<ComboBoxItem Content="bossZryachiy"/>
									<ComboBoxItem Content="bossGluhar"/>
									<ComboBoxItem Content="bossSanitar"/>
									<ComboBoxItem Content="bossKojaniy"/>
									<ComboBoxItem Content="bossBoar"/>
									<ComboBoxItem Content="bossBoarSniper"/>
									<ComboBoxItem Content="sectantPriest"/>
									<ComboBoxItem Content="arenaFighterEvent"/>
									<ComboBoxItem Content="pmcBot"/>
									<ComboBoxItem Content="exUsec"/>
									<ComboBoxItem Content="crazyAssaultEvent"/>
								</ComboBox>

								<CheckBox Margin="0,5" Content="ForceSpawn" DataContext="{Binding SelectedItem, ElementName=BossList}" IsChecked="{Binding ForceSpawn, Mode=TwoWay}"/>
								<CheckBox Margin="0,5" Content="IgnoreMaxBots" DataContext="{Binding SelectedItem, ElementName=BossList}" IsChecked="{Binding IgnoreMaxBots, Mode=TwoWay}"/>
								<CheckBox Margin="0,5" Content="RandomTimeSpawn" DataContext="{Binding SelectedItem, ElementName=BossList}" IsChecked="{Binding RandomTimeSpawn, Mode=TwoWay}"/>

							</StackPanel>
						</StackPanel>
					-->
					</StackPanel>
				</Expander>
			</StackPanel>
		</ScrollViewer>
	</Grid>
</UserControl>
