<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:cp="clr-namespace:ThemeEditor.Controls.ColorPicker;assembly=ThemeEditor.Controls.ColorPicker"
			 xmlns:converters="clr-namespace:SIT.Manager.Avalonia.Converters"
			 xmlns:vm="clr-namespace:SIT.Manager.Avalonia.ViewModels"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="550"
             x:Class="SIT.Manager.Avalonia.Views.SettingsPage"
			 Background="{DynamicResource ApplicationPageBackgroundThemeBrush}"	 
			 x:DataType="vm:SettingsPageViewModel">
	<UserControl.Resources>
		<converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
	</UserControl.Resources>
	
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<ScrollViewer Grid.Row="0">
			<StackPanel Margin="10">
				<!--Launcher settings-->
				<TextBlock Text="Launcher Settings" Margin="5" VerticalAlignment="Center"/>
				<Border CornerRadius="8" BorderBrush="Gray" BorderThickness="1" Padding="10">
					<StackPanel>
						<CheckBox Content="Close Launcher After Game Launch" 
								  ToolTip.Tip="Closes the launcher automatically after opening the game."
								  IsChecked="{Binding CloseAfterLaunch, Mode=TwoWay}"/>
						<CheckBox Content="Close Aki Server On Launcher Close"
								  ToolTip.Tip="Automatically shutdown the aki server when closing the launcher. (Note: If you have 'Close Launcher After Game Launch' enabled this is ignored)"
								  IsChecked="{Binding CloseServerOnClose, Mode=TwoWay}"/>
						<CheckBox Content="Look For Updates" 
								  ToolTip.Tip="Automatically look for updates when opening the launcher."
								  IsChecked="{Binding LookForUpdates, Mode=TwoWay}"/>
					</StackPanel>
				</Border>
				
				<!--EFT Settings-->
				<TextBlock Text="EFT Settings" Margin="5" VerticalAlignment="Center"/>
				<Border CornerRadius="8" BorderBrush="Gray" BorderThickness="1" Padding="10">
					<StackPanel>
						<StackPanel Orientation="Horizontal" >
							<TextBlock Text="EFT Path:" Margin="0,0,10,0" VerticalAlignment="Center"/>
							<TextBox Watermark="EFT Install Path..." 
									 Margin="0,0,10,0" 
									 MinWidth="425" 
									 MaxWidth="425" 
									 IsReadOnly="True"
									 Text="{Binding InstallPath}"/>
							<Button Name="ChangeInstallButton" 
									Content="Change"
									Margin="0,0,10,0" 
									ToolTip.Tip="Change the EFT Install Path."
									Command="{Binding ChangeInstallLocationCommand}"/>
						</StackPanel>
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="EFT Version:" Margin="0,10,10,0" VerticalAlignment="Center"/>
							<SelectableTextBlock Text="{Binding TarkovVersion, Mode=TwoWay}" Margin="0,10,10,0" VerticalAlignment="Center"/>
						</StackPanel>
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="SIT Version:" Margin="0,10,10,0" VerticalAlignment="Center"/>
							<SelectableTextBlock Text="{Binding SitVersion, Mode=TwoWay}" Margin="0,10,10,0" VerticalAlignment="Center"/>
						</StackPanel>
					</StackPanel>
				</Border>
				
				<!--SPT-AKI Settings-->
				<TextBlock Text="SPT-AKI Settings" Margin="5" VerticalAlignment="Center"/>
				<Border CornerRadius="8" BorderBrush="Gray" BorderThickness="1" Padding="10">
					<StackPanel>
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="SPT-AKI Path:"  VerticalAlignment="Center"/>
							<TextBox Watermark="SPT-AKI Install Path..." 
									 Margin="5" 
									 MinWidth="397" 
									 MaxWidth="425" 
									 IsReadOnly="True"
									 Text="{Binding AkiServerPath}"/>
							<Button Name="ChangeAkiServerPath" 
									Content="Change" 
									Margin="5" 
									ToolTip.Tip="Change the SPT-AKI Install Path."
									Command="{Binding ChangeAkiServerLocationCommand}"/>
						</StackPanel>
					</StackPanel>
				</Border>
				
				<!--Server Console-->
				<TextBlock Text="Server Console" Margin="5" VerticalAlignment="Center"/>
				<Border CornerRadius="8" BorderBrush="Gray" BorderThickness="1" Padding="10">
					<StackPanel>
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="Font family:" Margin="0,0,10,0" VerticalAlignment="Center"/>
							<ComboBox x:Name="fontComboBox" 
									  Margin="0,0,10,0" 
									  VerticalAlignment="Center" 
									  VerticalContentAlignment="Center"
									  SelectedIndex="0"
									  MaxDropDownHeight="300"
									  ItemsSource="{Binding InstalledFonts}"
									  SelectedItem="{Binding SelectedConsoleFontFamily}">
								<ComboBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding}" 
												   FontFamily="{Binding}"
												   VerticalAlignment="Center"/>
									</DataTemplate>
								</ComboBox.ItemTemplate>
							</ComboBox>
						</StackPanel>
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="Font Color:" Margin="0,10,10,0" VerticalAlignment="Center"/>
							<ToggleButton Name="ConsoleColorPopupButton"
										  Width="30"
										  Height="15" 
										  BorderThickness="0"
										  Padding="0"
										  Margin="0,10,10,0"
										  HorizontalAlignment="Stretch"
										  VerticalAlignment="Stretch"
										  HorizontalContentAlignment="Stretch"
										  VerticalContentAlignment="Stretch">
								<ToggleButton.Styles>
									<Style Selector="ToggleButton">
										<Setter Property="RenderTransform" Value="none" />
										<Setter Property="Transitions" Value="{x:Null}" />
									</Style>
									<Style Selector="ToggleButton:pressed">
										<Setter Property="RenderTransform" Value="none" />
									</Style>
									<Style Selector="ToggleButton:checked /template/ ContentPresenter, ToggleButton:pressed /template/ ContentPresenter">
										<Setter Property="Background"
												Value="{Binding ConsoleFontColor, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}"/>
									</Style>
									<Style Selector="ToggleButton:checked /template/ ContentPresenter">
										<Setter Property="BorderBrush"
												Value="{Binding ConsoleFontColor, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}"/>
									</Style>
								</ToggleButton.Styles>
								<Panel DockPanel.Dock="Top"
									   VerticalAlignment="Stretch">
									<Border BorderThickness="0" CornerRadius="0" />
									<Border BorderThickness="0" CornerRadius="0" />
									<Border BorderThickness="0" CornerRadius="0"
											Background="{Binding ConsoleFontColor, Mode=OneWay, Converter={StaticResource ColorToBrushConverter}}"/>
								</Panel>
							</ToggleButton>
							<Popup IsOpen="{Binding #ConsoleColorPopupButton.IsChecked, Mode=TwoWay}"
								   IsLightDismissEnabled="True"
								   PlacementMode="Pointer">
								<Border Background="{DynamicResource ApplicationPageBackgroundThemeBrush}" 
										CornerRadius="5">
									<cp:ColorPicker Color="{Binding ConsoleFontColor, Mode=TwoWay}"/>
								</Border>
							</Popup>
						</StackPanel>
					</StackPanel>
				</Border>
			</StackPanel>
		</ScrollViewer>

		<StackPanel Margin="0,5" Orientation="Horizontal" Grid.Row="1">
			<TextBlock Margin="10" Text="Manager Version: "/>
			<SelectableTextBlock Text="{Binding ManagerVersionString}" VerticalAlignment="Center" Padding="5"/>
		</StackPanel>
	</Grid>
</UserControl>
